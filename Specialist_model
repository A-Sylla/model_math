%%%%% Trophic model %%%%%%

function [N,R,P,BN,BR,BP,Bo] = Specialist_model(time,No,n,r,K,u,v,wo,W,Q)
    
    global dt alpha1 alpha2 beta mu e1 e2 b c1 c2 c3 d1 d2 theta eta zeta sN lambda1 lambda2 nu1 nu2 gamma rho s1 s2 Lambda delta kappa sigma1 sigma2 
    
    % initialize variables
    N = zeros(n,length(time));   
    R = zeros(n,length(time));    
    P = zeros(n,length(time));
    BN = zeros(n,length(time));  
    BR = zeros(n,length(time));   
    BP = zeros(n,length(time));   
    Bo = zeros(n,length(time));
    
    % initial data values
    N(:,1) = No(1)*ones(n,1);   
    R(:,1) = No(2)*ones(n,1);   
    P(:,1) = No(3)*ones(n,1); 
    BN(:,1) = No(4)*ones(n,1);  
    BR(:,1) = No(5)*ones(n,1);  
    BP(:,1) = No(6)*ones(n,1);  
    Bo(:,1) = No(7)*ones(n,1);
    
    % Initialize generalist macro-predator and micro-predator dispersal rates (time t=1)
    m = zeros(n,length(time));  z = zeros(n,length(time));   
        m(:,1) = u./(1+R(:,1));      % for macro-predators
        z(:,1) = v./(1+N(:,1));      % for micro-predators
    
    % Initialize immigration predators (time t=1)
    I = zeros(n,length(time));   J = zeros(n,length(time));   Y = zeros(n,length(time));  
        I(:,1) = ( m(:,1)'*P(:,1)-m(:,1).*P(:,1) )/(n-1) ;     % for macro-predtors
        J(:,1) = ( z(:,1)'*R(:,1)-z(:,1).*R(:,1) )/(n-1) ;     % for micro-predtaors
        Y(:,1) = ( wo*sum(N(:,1))-wo*N(:,1) )/(n-1) ;         % for prey
  
    % Initialize immigration predator-associated bacteria (time t=1)
    E = zeros(n,length(time));   F = zeros(n,length(time));   G = zeros(n,length(time));
        E(:,1) = ( m(:,1)'*BP(:,1)-m(:,1).*BP(:,1) )/(n-1) ;    % on macro
        F(:,1) = ( z(:,1)'*BR(:,1)-z(:,1).*BR(:,1) )/(n-1) ;    % on micro
        G(:,1) = ( wo*sum(BN(:,1))-wo*BN(:,1) )/(n-1) ;        % on prey
    
    
    % Equations of the model for each patch 
    for t = 1:length(time)-1        
        for i = 1:n   
        % tri biomasses    
        N(i,t+1)=( N(i,t) + dt*(r(i,t)*N(i,t)*(1-N(i,t)/K(i))+Y(i,t)) )/( 1+dt*(mu+wo+(alpha1*R(i,t)+alpha2*P(i,t))/(1+e1*R(i,t)+e2*P(i,t)+b*N(i,t))) );
        R(i,t+1)=( (1-W(i,t))*R(i,t) + dt*(c1*alpha1*R(i,t)*N(i,t)/(1+e1*R(i,t)+e2*P(i,t)+b*N(i,t))+J(i,t)) )/( 1+dt*(d1+beta*P(i,t)/(1+e2*P(i,t)+b*R(i,t))+z(i,t)) );
        P(i,t+1)=( (1-Q(i,t))*P(i,t) + dt*(c2*alpha2*P(i,t)*N(i,t)/(1+e1*R(i,t)+e2*P(i,t)+b*N(i,t))+c3*beta*P(i,t)*R(i,t)/(1+e2*P(i,t)+b*R(i,t))+I(i,t)) )/( 1+dt*(d2+m(i,t)) );
        
        % biomasses-associated bacteria
        BN(i,t+1)=( BN(i,t) + dt*(theta*N(i,t)*BN(i,t)/(sN+N(i,t))+zeta*N(i,t)*Bo(i,t)/(sN+N(i,t))+G(i,t)) )/( 1+dt*(eta+mu+wo+(alpha1*R(i,t)+alpha2*P(i,t))/(1+e1*R(i,t)+e2*P(i,t)+b*BN(i,t))) );
        BR(i,t+1)=( (1-W(i,t))*BR(i,t) + dt*(lambda1*R(i,t)*BR(i,t)/(s1+R(i,t))+gamma*R(i,t)*Bo(i,t)/(s1+R(i,t))+alpha1*R(i,t)*BN(i,t)/(1+e1*R(i,t)+e2*P(i,t)+b*BN(i,t))+F(i,t)) )/( 1+dt*(nu1+d1+z(i,t)+beta*P(i,t)/(1+e2*P(i,t)+b*BR(i,t))) );
        BP(i,t+1)=( (1-Q(i,t))*BP(i,t) + dt*(lambda2*P(i,t)*BP(i,t)/(s2+P(i,t))+rho*P(i,t)*Bo(i,t)/(s2+P(i,t))+alpha2*P(i,t)*BN(i,t)/(1+e1*R(i,t)+e2*P(i,t)+b*BN(i,t))+beta*P(i,t)*BR(i,t)/(1+e2*P(i,t)+b*BR(i,t))+E(i,t)) )/( 1+dt*(nu2+d2+m(i,t)) );
        
        % free-living bacteria 
        Bo(i,t+1)=( Bo(i,t) + dt*(Lambda(t)*Bo(i,t)+kappa*mu*BN(i,t)+sigma1*(d1+W(i,t))*BR(i,t)+sigma2*(d2+Q(i,t))*BP(i,t)) )/( 1+dt*(delta+zeta*N(i,t)/(sN+N(i,t))+rho*P(i,t)/(s2+P(i,t))+gamma*R(i,t)/(s1+R(i,t))) );
              
        % Update dispersal rates for next time step
        m(i,t+1)= u/(1+R(i,t+1));   I(i,t+1)= ( m(:,t+1)'*P(:,t+1)-m(i,t+1)*P(i,t+1) )/(n-1) ;    E(i,t+1)= ( m(:,t+1)'*BP(:,t+1)-m(i,t+1)*BP(i,t+1) )/(n-1) ; 
        z(i,t+1)= v/(1+N(i,t+1));   J(i,t+1)= ( z(:,t+1)'*R(:,t+1)-z(i,t+1)*R(i,t+1) )/(n-1) ;    F(i,t+1)= ( z(:,t+1)'*BR(:,t+1)-z(i,t+1)*BR(i,t+1) )/(n-1) ; 
                                    Y(i,t+1)= ( wo*sum(N(:,t+1))-wo*N(i,t+1) )/(n-1);             G(i,t+1)= ( wo*sum(BN(:,t+1))-wo*BN(i,t+1) )/(n-1) ; 
                                    
        end
    end
end
